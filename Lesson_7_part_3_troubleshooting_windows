#Introduction

The biggest problem I have come across when trying to troubleshoot things is finding a structure to follow. At first when I tried to just wing it and go with my gut feeling on what the problem was, sometimes I would instantly get it right other times it would take forever to find the problem. So I then started creating a more formal process to find out what the problem was/is. After comparing gut feelings vs having a set process to follow I found that while in the beginning gut feelings could be a lot faster than a set process. As time goes on and the different kinks and inefficiency are worked out of the set process on average the set process was faster. With the added benefit of being easier to teach to other people in comparison to telling them "when you see this you should feel this" I have increased the amount of times I use a set process. In this scenario we will be using the TCP/IP model to troubleshoot since that was already covered in a previous lesson so you should already be a bit familiar with it.

#Quick Overview

When you start troubleshooting a problem it is best to look for the simplest/most likely solution which when it comes to a computer will typically be some physical connection though you can of course change the order you go in as needed if you are familiar enough with the troubleshooting process. That is why we start at Layer 1 the network interface layer, here we will check all the physical connections to make sure all the appropriate cables are connected and that the lights are the appropriate color (green lights tend to be good connections, amber lights tend to signify connection problem). Next we go to the Internet layer which entails checking all device (both the host and the network devices) to ensure they are using the correct IP addressing scheme (IP address, subnett masks, default gateways, dns servers and etc...). Then we go to the Transport Layer to verify that the different network devices have a properly implemented routing protocol, vlans, firewall rules/acls and point or have the appropriate dns servers and dhcp servers. Afterwards we will be at the Application Layer and it is here that we will check things like if the proper protocol is being used, are the correct settings in place, is there a lack of resources and if the problem is just that it is doing what it is supposed to but in a slightly different way then normal. 

#Network interface layer (Check the physical connection between devices)

This step of the troubleshooting process doesn't just cover things like ensuring ethernet cables are fully connected, it also covers any other physical device that could be apart of the problem. For instance if the problem deals with if/how a computer displaying an image/picture you might want to ensure the hdmi or dva connection is properly seated/inserted because things like partial connections will make the connected monitor use strange colors or not show anything at all. Checking to verify the power cord for every device a part of this is not only completely plugged into an  outlet and into the device but also ensuring that the thing they are plugged into is actually supplying enough power consistently. Typically if the power is a problem you will know because nothing will be showing/done, there will not be any lights on the device or there will be more noise caused by certain parts not getting enough power. If the problem is that words typed into the keyboard are not showing up verify its connection and make sure that there is nothing (gunk/food for example) in the keyboard stopping the key from responding. When the mouse is not behaving appropriately make sure that the surface it is placed on is compatible with it, because sometimes the surface will not roll the ball that is inside of certain types of mouse, or will interfere with the reflection of light which optical mice use to see if it is being used. The list goes on but the general idea is to know what each physically connected device is responsible for doing so you know that if x has a problem to first check the device that manages/provides x to ensure it is properly connected, is getting the power it needs and has an environment that isn't stopping it from doing it's job.

#Internet layer (check the addressing information)

Now that we have checked to ensure that everything is properly physically connected, we will be verifying if an appropriate IP addressing scheme is in use. What that means is we will need to verify each host either has an IP address and subnett mask or is able to go to a Dynamic Host Configuration Protocol (DHCP) server which will automatically assign it an IP address. If a host has an IP address that starts with 169.254 that is an Apipa (Automatic Private IP addressing) address which is not routable on the internet and is assigned when a machine is not able to obtain an IP address on its on or through the use of a DHCP server. Once you have checked that it has a legitimate IP address (not an Apipa) and a correct subnett mask verify that it has the correct default gateway set. Then you need to ensure that the routers interface which is facing the host/hosts you just looked as and serves as their default gateway actually has that IP address assigned to that interface while also verifying that the interface is not shutdown. You should also check all of the other routers interfaces to ensure that the interfaces that connect to other devices have an IP address that matches with the other sides interface (is apart of the same subnet) and is not shutdown. Lastly check that every host that needs to communicate with each other are listed under the same vlan on the switch or have a trunk port setup between them and the other computer they need to communicate to. All of this was done to make sure that each device/interface has been properly setup so that all we have left to check on these network devices is their routing protocols and filters/security controls.

#Transport Layer (Verify configuration of network devices)

This step of the troubleshooting process is concerned about making sure routers are setup to handle traffic correctly and that no firewall rules, filters or restrictions are in place that are causing this problem. When it comes to the rules, filters and restrictions all we need to really check for is if the machine experiencing the problem or the port/service/connection it is using has some kind of restriction placed on it. For example if the problem is PC (personal Computer) 1 cannot connect to PC 2 on port 22, you would need to verify PC1 and PC2 IP address is not blocked and that the port 22 is not blocked for just PC2 or PC1. After you have verified this is not the problem you will need to check out the routers routing protocol ensuring that its 3 parts are correct and if applicable it has the correct autonomous system number in use. The first part of a routing protocol is the way it identifies all connected networks/IP address ranges, all you have to troubleshoot/verify here is that every network/IP range is clearly identified/specified in the routing protocol. Then comes the advertisement statement part of the routing protocol which is how it decides/knows who to share its routing table with, just double check that all connected routers are setup to advertise their routing statement to each other. Third part of the routing protocol is the version which is simple enough since you just have to make sure that internal routers use the same version of the same routing protocol otherwise they will not be able to share their routing tables with each other. Last is the autonomous system number which is a way to separate networks based on who controls them, this used to specify the range of routers who will actually share routing statements. If you see two internal routers use two different ASN (autonomous system numbers) that is probably why they are not sending routing table updates to each other, because unless you are using a border gateway protocol different ASN will ensure they do not know each others routes. Border gateway protocol is a routing protocol used on routers located at the point where two different networks meet and is used to limit the number of routing statements each router must know by ensuring that routers only have to know what is apart of their network. If a router receives something destined for a computer not a part of its network it will send it to their networks edge router (router located at the edge of a network) to be forwarded to the next persons network until it reaches it's destination.

#Application layer (Check the programs settings)

So far we have covered troubleshooting a computers physical connections/cables and the configuration of network devices in an attempt to solve our problem, now we shall look at our actual computer/machine to verify if the problem lies within.  To begin since we have verified our problem isn't a physical cable, connector or network device that leaves software/a computer program as the most likely problem/cause of the problem. Regardless of the type of software we are dealing with (drivers, program, script, binary and etc ....) it will be comprised of three parts. First there is the interface the software uses to interact with things and be interacted with, this is not just the possible GUI (graphical user interface) it uses to receive commands/request but also the threads, code and etc ... that it uses to do whatever it is designed to do. If the problem is here the most likely causes is insufficient resources (the computer might not have enough or they may be getting claimed by other machines), incompatible interface (the way the software interacts with things just might not work natively on the system it is on and will need to be modified to make it work) and/or configuration errors (to be more specific this is basically just a problem caused by the interface being misinformed so it is using the wrong value/information which is causing the problem). Second is the data/information that the software stores, processes, receives and sends, here we will be verifying that the software is actually receiving/sending information/data, what it gets/is handling and how it is is handling it to ensure that every other thing its interacting with is doing their part and the problem is this part of the software. Data/information problem can be identified by looking at the data/information before it goes to the software so that you can verify that there is actually something there and its not just null/junk/things you did not want/send. Also you check the output of the software/whatever it creates to see if it responded appropriately to the data/information sent. Last is the actual file/files and the place it is located at, you see sometimes the problem occurs because a file with a similar/same name has started to be used or the folder/file we are dealing with for some reason have the incorrect permissions applied to them stopping/restricting certain actions. 

#Conclusion

After going through this lesson you should be able to do basic troubleshooting, by checking everything that is involved in the completion of this action. Most of the time the problem will be a physical connection/cable or a network communication related issue which is why most of these steps where dedicated to it. We covered checking the cables, the connection, switches and routers configuration before also looking at the rules/restrictions implemented through the use of firewalls and access controls lists. Then since sometimes the problem is related to computer errors/anomalies caused by software  issues we delved into figuring out the source of the software problem. This is done by first checking to verify legitimate/unmodified information is actually being received which is done by looking at the raw information as it is being handled. Afterward we verify the software has access to the appropriate resources it needs to do it's assigned tasks, these resources include ram, cpu usage and the actual threads/code used to do tasks. You will know the problem is here because either the resources will not be enough, they are getting claimed by other software/programs or the actual things the code/threads need to interact with do not exist. The last possible basic problem is that a software/program/file with the same name is being used instead of the actual legitimate program or folder/file/user running them permissions have changed so that now they no longer have permission to access things. While this was represented with the TCP/IP model you will now have a set path to follow next time you need to figure out what the source of a problem is. 
